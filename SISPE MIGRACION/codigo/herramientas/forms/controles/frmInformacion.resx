<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABHVJREFUaEPtmnmoVVUUh5/m0GCpTVJBWpZhVDRB5UCQgaEVSmQTpUVzUFSgNKKi
        oGBEgSVWkEpoYplWRlhq9UdFBBFNRPOcRQ6V2KD1fae74ryH73m9d+/77gN/8MFb+927917n7GHttW/L
        brXWvnA23AtPwlvwI2yCf+Av+AU+h5dgPlwLx0F36FT1BTvzIvwJdrgWvoUHYTg0VEfAQ/ArRGe2wqsw
        CybAqXAw7AkhHR8Eo+B6eBw+gbJTb8PlkPUt7Q8PwB9go9vgebgU9oNadTxMh28gHHofRkNyjYPvwUYc
        7w/DYEipnnAxfAjh0CLoD3WrBzh+o+IX4CjIKdu8EWKh+ApOhprlSvQyWNnvcBU0UofDWoj2HRW7rH7w
        OljJl3ASdIbKI8KV8UKoWr1gDfjlj+Aw6GzdBfbnbzjLgmr0GPglN68BFjSJpoH92gA7XWh8dX7Yieay
        2EzqBk+A/XsD9oAd6kD4GfzglRYk0Alg6CIHWFCn+sCnYB8nW7Aj3Q9+4LnCSqPXwDrF3TyFzgTrc9T4
        8FvpEDDMcDIda0EilR25wYJEehqsc05hlRQTyTGYUrEPSKrhqhyy1unE38sC5ST6GvzHGRYklEGjIYbY
        TkrF255YWMjt3wIj0a6kq8F+Ly0sdCdYYGTblXQo2O+NUCzFSyoFl2gkllFCrqGlYikeovFexcixAS4D
        65ZJFiTWCrDuIqBcXzGSxP1t5J4UjqRcfkNOB+s27C/2D412t/w6lNsRT5bWfYdGV3bErI1136PRlYfW
        fWDdN2u8WzFyTPbcjkQ0fJnG4ophNiS1cjsSL+FEDcNhDY+UqZXTEfNkZnSc470tcEjZUI4QJacjcQg0
        0/m/PgMLTy+sdMrpyFNgvbcUVkVTwMIFhZVOuRwxIeKwMuvZ6nClsRn85zEWJFIuR+aCdS4srDaaCv5z
        ZWGlUQ5HhoIP3DzX0Ra0lQd7k3E2akY8hTwrhCOeH+qVCbs3wfo6XGVNfm0Hh1mKDXJvOLKCSep6NRt0
        wvDdB9+hZoIf/gIOsqBJ5CixX07wqi6FPADF0vYBNEPK1EOfGR77dIUF1cqTXUxUU6fFCayTZEAYTrhN
        7LIc36bzrcBMYaPlLZgXPbbv7ditUJMuAisxVdTom9ex4AWP7ZtRPA9qkpc8EbbcbUGDNALiSkNegZqv
        +DwpxvrvZC8iy4wyqrgGvJsPB34Ac8U1jwSdiPsR80WmJqvVKXAdjIT2Mu8uIu7G58IM8InHRJbvwDzb
        TveIjuSXnwEr/A2quRnyO+7Y5acZuFD4ZN28HKb+8qHc6WALLAfnZN2bpjtvnLZ+gtOgPZnPPR9cUXxr
        0SHvyR+F1ZW/o7yMm9nHsApMnJ8D+0ASed3s70Zs6B3w1wlt5WnsAvCMbPgSHTOc8WAzHoyDynJ8m9Dw
        Ibmp5khutJKv1U4ZUbrhjAGf+G0wD3TOdbzceW98b4eB0DQKRzrCcbwO3JS8/25KOcH8IcwjoFOO8WfB
        q7ibYBjkXoJ36z+1tPwL/xNvWZDMhzEAAAAASUVORK5CYII=
</value>
  </data>
</root>