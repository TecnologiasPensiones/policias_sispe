<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABIVJREFUaEPtmdtrXFUUh/Pkq/gn+Ff0VbCUQsXGGmuw0lgbTWlsYlUUJcGA9EGn
        4uWxFLHFSK9orTZIlBaMSNo0TkgzZG6ZM5lLzj6TTHMboaIu9xr2nr3PmV/azEXpw/nBR4aZtdf69snZ
        MxPSESZMmDBh2pbVX75/zL186brrOPNCiIcKdmI3mhp/VOn643xz8UkxcJTcvXvIO9JL6zNRqlQqDwXs
        wk7sJgb6/8ldvfqE0jYRH4z8yQU19j1N5bNfUmV9HTb9X5Cz2YFdfG7SVWmbiAPd/iJF6Y1B2kgl8YD/
        EJ7Js5ETuyptE3G4BxYzYv8+Wr3yLVU2N+GwtiJn8CyeiVwYdlXaJslXekk8uxcu0Cy/P0SbhQIe3Aa4
        N89AszXsmOo9XL+Bmzt2UPylHhI9B+BCjXixm9ZuXIcCrcA9uTeaqWE3dmRXpW3CTzLTO3eSexzfezYr
        H0eosrwMZRpC9uBeaIYP6cRu2lNpm+gXNJnX+snt7sLNFF7vIVq7PYXFtgGv5R6odw3pwC5BP6VtEixg
        MrduknjzddxY0/kUlU+fos21NSiJ4Fpew2thT4X31nHKR3+v82KUtgkqSiaTlJyfJ5eHBd+LA3gD/bQR
        j0NhG67hWtSjhpzlfXGanHSaHMep82KUtgkq4sWJRILicmiWD9mrL+OBCvHcM3T34nn8diuf49e4Bq3V
        8IzirxPV2RrkprRNUBEvXlhYqG6ASc3NkYh8CAfblN57hzYWF2vy/JifQ7U23smPKCsvmC3f8gYYexNM
        /rsr8tPweSihES/sp9XxH6vwY1Sjqfa69oNP2ga5KW0TVGQ3Scv70d7EwvQ0iXffhkKN4MnfTG521jcr
        CHJT2iaoKNgolUr5NhGXB3zp7BkSXZ1Q7n7wGm/0K3Iymbo5QZCb0jZBRagZvzP5NiFxJibI6++Dogiu
        LUxOwv4I5Ka0TVARapaRVyy4ASbBB/yzT+7/3i5f8z7/lLLyN4l6bwVyU9omqAg1Y4KH2iY3dg1+n6o+
        99M47PcgkJvSNkFFqJkmeKhtUvLTU1jfKr2RYVqMzcE+2wG5KW0TVISa2dQd6gDFc1+TkB9eaG0jIDel
        bYKKUDMbPg/oUDN8my3KDzC0rlGQm9I2QUWoGUJ/3dBks1lY1yzITWmboCLUDKEPNW+kXVfdBrkpbRNU
        hJptBYu3+8prkJvSNkFFqBmiWCzSyspK9Sd6vVWQm9I2QUWomQ1fcc/zqFwu18jn87C2FZCb0jZBRaiZ
        JpfLVa+6Lc8sy79x230OkJvSNkFFqBmztLRUJ27Dm2jneUBuStsEFQUboVtmK4QQdeubBbkpbZNbu3b9
        HSyym/C9zVcWyW5FoVDw9WiWoNfU7t31G4j29cWChbqB67pQ8EHwGeGzYss0Q9DrztDQX0rbJBqJPH67
        q2vDLuTDWCqVoNx2acehtp2iBw9SbGxsj9L2586FC4/MDg+PzAwO/jxz7NikvPI35D3/W6vIWykhNyH/
        tm+O2IkT92KRyB/zo6PRcjqN/8ERJkyYMGEaT0fHv3jkqwqLKyKJAAAAAElFTkSuQmCC
</value>
  </data>
</root>